% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/indices.R
\name{ineq_LTquantile}
\alias{ineq_LTquantile}
\title{ineq_LTquantile}
\usage{
ineq_LTquantile(age, lx, quantile, n.grid = 1000)
}
\arguments{
\item{age}{numeric. vector of lower age bounds.}

\item{lx}{numeric. vector containing the lifetable survivorship. The starting radix (\eqn{\ell_{0}}) can be 100000, 1, or any value you like.}

\item{quantile}{numeric. value between zero and one indicating the quantile of interest.}

\item{n.grid}{numeric. How many points do we want to interpolate? Defaults to 1000, which would work out to about a tenth of a year for a vector of life table survivors from age zero to 100+.}
}
\description{
Calculate quantiles of survivorship from a lifetable
}
\details{
The age and lx vectors must be the same length. This function estimates any quantile of survivorship for the life table cohort by fitting a cubic spline through the survival curve. If your data have a lower upper age bound then that which corresponds to the quantile that you are interested in, consider extrapolation methods, for instance a parametric Kannisto model (implemented in package 'MortalityLaws').
}
\examples{

data(LT)
# The median age at survival
LTmedian <- ineq_LTquantile(age=LT$Age,lx=LT$lx,quantile=0.5,n.grid=1000)
LTmedian
# The age reached by 90\% of the life table cohort (i.e. the top 10\%)
ineq_LTquantile(age=LT$Age,lx=LT$lx,quantile=0.1,n.grid=1000) 
# The difference between the bottom 10 and top 10 percent of survival age
ineq_LTquantile(age=LT$Age,lx=LT$lx,quantile=0.1,n.grid=1000) -
ineq_LTquantile(age=LT$Age,lx=LT$lx,quantile=0.9,n.grid=1000)
}
