% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/indices.R
\name{ineq_quantile}
\alias{ineq_quantile}
\title{ineq_quantile}
\usage{
ineq_quantile(age, lx, quantile = 0.5)
}
\arguments{
\item{age}{numeric. vector of lower age bounds.}

\item{lx}{numeric. vector of the lifetable survivorship.}

\item{quantile}{numeric. value between zero and one indicating the quantile desired.}
}
\description{
Calculate conditioned quantiles of survivorship from a lifetable, returns full lifetable column.
}
\details{
All input vectors must be the same length. Also, we recommend using input data from a life table by single year of age with a highest age group of at least age 110. If your data have a lower upper age bound, consider extrapolation methods, for instance a parametric Kannisto model (implemented in \code{MortalityLaws::MortalityLaw}). If your data are abridged, consider first smoothing over age, and calculating a life table by single year of age (for instance by smoothing with a pclm model in package \code{ungroup} or with a penalized B-spline approach in package \code{MortalitySmooth}).
}
\examples{

data(LT)
# The median age at survival
LTmedian <- ineq_quantile(age=LT$Age,lx=LT$lx,quantile=0.5)
LTmedian
# The age reached by 90\% of the life table cohort (i.e. the top 10\%)
ineq_quantile(age=LT$Age,lx=LT$lx,quantile=0.1) 
# The difference between the bottom 10 and top 10 percent of survival age
ineq_quantile(age=LT$Age,lx=LT$lx,quantile=0.1) -
ineq_quantile(age=LT$Age,lx=LT$lx,quantile=0.9)
}
\seealso{
\code{MortalityLaws::\link[MortalityLaws]{MortalityLaw}}

\code{ungroup::\link[ungroup]{pclm}}

\code{MortalitySmooth::\link[MortalitySmooth]{Mort1Dsmooth}}
}
